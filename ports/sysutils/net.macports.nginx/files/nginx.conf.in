
user  _www _www;
worker_processes  auto;
daemon  off;

error_log  @PREFIX@/var/log/nginx/error.log;
#error_log  @PREFIX@/var/log/nginx/error.log  notice;
#error_log  @PREFIX@/var/log/nginx/error.log  info;

pid  @PREFIX@/var/run/nginx/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  @PREFIX@/var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 6;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_types text/css text/javascript text/plain text/xml application/json application/x-javascript application/xml application/xml+rss;
    gzip_vary on;

    server {
        listen       80 default_server;
        listen       [::]:80 default_server ipv6only=on;
        server_name  localhost;

        #charset koi8-r;

        #access_log  @PREFIX@/var/log/nginx/host.access.log  main;

        root   share/nginx/html;
        index  index.html index.htm;

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   share/nginx/html;
        }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           share/nginx/html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    include        fastcgi.conf;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    }

    include conf.d/*.conf;
    include sites-enabled/*.conf;
}
