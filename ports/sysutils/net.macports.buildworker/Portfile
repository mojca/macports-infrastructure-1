# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4

PortSystem          1.0
PortGroup           net.macports 1.0

name                net.macports.buildworker
version             14

depends_run         port:buildbot-slave \
                    port:curl \
                    port:getopt \
                    port:subversion

add_users           buildbot group=buildbot realname=buildbot

set hostname        [lindex [split [info hostname] .] 0]
set legacy          [string match {*-legacy*} ${hostname}]
set os_version      10.[expr [lindex [split ${os.version} .] 0] - 4].[lindex [split ${os.version} .] 1]
set worker_id       [join [lrange [split ${os_version} .] 0 1] .]_${build_arch}
set cxx_lib         libc++

if {[vercmp ${os_version} 10.9] < 0} {
    variant legacy description {Use libstdc++ instead of libc++} {}
    if {${legacy}} {
        default_variants +legacy
    }
    if {[variant_isset legacy]} {
        append worker_id _legacy
        set cxx_lib     libstdc++
    }
}

proc random_password {} {
    return some-random-password
}

set password_base   [random_password]
set password_ports  [random_password]

variant base description {Use a base worker} {
    post-destroot {
        xinstall -d -o buildbot -g buildbot ${destroot}${prefix}/var/buildworker/base

        ln -s ../info ${destroot}${prefix}/var/buildworker/base/info

        xinstall -m 644 ${filespath}/${name}.base.plist.in ${destroot}/Library/LaunchDaemons/${name}.base.plist
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}/Library/LaunchDaemons/${name}.base.plist
    }
}

if {!([variant_isset legacy] || ([vercmp ${os_version} 10.6] == 0 && ${build_arch} eq "i386"))} {
    default_variants +base
}

if {[variant_isset base]} {
    append notes_create "
sudo -H -u buildbot ${prefix}/bin/buildslave\
    create-slave --umask 022\
    ${prefix}/var/buildworker/base\
    build:9989\
    base-${worker_id}\
    ${password_base}"
    append notes_upgrade "
sudo -H -u buildbot ${prefix}/bin/buildslave\
    upgrade-slave\
    ${prefix}/var/buildworker/base"
    append notes_slaves "
\"base-${worker_id}\": \"${password_base}\","
    append notes_svn "
sudo -u buildbot svn --config-dir ${prefix}/var/buildworker/base/.subversion info https://svn.macports.org/repository/macports"
    append notes_load "
sudo launchctl load -w /Library/LaunchDaemons/${name}.base.plist"
    append notes_unload "
sudo launchctl unload -w /Library/LaunchDaemons/${name}.base.plist"
}

variant ports description {Use a ports worker} {
    post-destroot {
        xinstall -d -o buildbot -g buildbot ${destroot}${prefix}/var/buildworker/ports

        ln -s ../info ${destroot}${prefix}/var/buildworker/ports/info

        xinstall -m 644 ${filespath}/${name}.ports.plist.in ${destroot}/Library/LaunchDaemons/${name}.ports.plist
        reinplace "s|@PREFIX@|${prefix}|g" ${destroot}/Library/LaunchDaemons/${name}.ports.plist
    }
}

default_variants +ports

if {[variant_isset ports]} {
    append notes_create "
sudo -H ${prefix}/bin/buildslave\
    create-slave --umask 022\
    ${prefix}/var/buildworker/ports\
    build:9989\
    ports-${worker_id}\
    ${password_ports}"
    append notes_upgrade "
sudo -H ${prefix}/bin/buildslave\
    upgrade-slave\
    ${prefix}/var/buildworker/ports"
    append notes_slaves "
\"ports-${worker_id}\": \"${password_ports}\","
    append notes_svn "
sudo svn --config-dir ${prefix}/var/buildworker/ports/.subversion info https://svn.macports.org/repository/macports"
    append notes_load "
sudo launchctl load -w /Library/LaunchDaemons/${name}.ports.plist"
    append notes_unload "
sudo launchctl unload -w /Library/LaunchDaemons/${name}.ports.plist"
}

# This only handles automatically updating the host info.
startupitem.autostart   yes

destroot {
    xinstall -d -o buildbot -g buildbot \
        ${destroot}${prefix}/share/buildworker \
        ${destroot}${prefix}/var/buildworker/info \

    xinstall ${filespath}/host.sh.in ${destroot}${prefix}/share/buildworker/host.sh
    xinstall ${filespath}/update_host.sh.in ${destroot}${prefix}/share/buildworker/update_host.sh
    reinplace "s|@ARCH@|${build_arch}|g" ${destroot}${prefix}/share/buildworker/host.sh
    reinplace "s|@CXX_LIB@|${cxx_lib}|g" ${destroot}${prefix}/share/buildworker/host.sh

    xinstall -m 644 -o buildbot -g buildbot ${filespath}/admin ${destroot}${prefix}/var/buildworker/info

    xinstall -m 644 ${filespath}/${name}.plist.in ${destroot}/Library/LaunchDaemons/${name}.plist
    reinplace "s|@PREFIX@|${prefix}|g" ${destroot}${prefix}/share/buildworker/update_host.sh ${destroot}/Library/LaunchDaemons/${name}.plist
}

post-deactivate {
    delete ${prefix}/var/buildworker/info/host
}

notes "
To create the buildworkers, run:
${notes_create}

To upgrade the buildworkers for a new version of buildbot, run:
${notes_upgrade}

Add these lines to slaves.json on buildmaster:
${notes_slaves}

When initially setting up the buildworkers, or if the SSL certificate changes, run:
${notes_svn}

To start the buildworkers, run:
${notes_load}

To stop the buildworkers, run:
${notes_unload}
"
