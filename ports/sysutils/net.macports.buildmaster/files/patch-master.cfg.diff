Index: master.cfg
===================================================================
--- master.cfg	(revision 151131)
+++ master.cfg	(working copy)
@@ -19,17 +19,17 @@
 # (where /opt/local shouldn't be messed with) and the production server (where
 # it has to be)
 
-production   = False
+production   = True
 privkey      = ''
 slaveport    = 9989
 httpport     = 8010
-buildboturl  = "http://localhost:8010/"
+buildboturl  = "https://build.macports.org/"
 htpasswdfile = "htpasswd"
 mpbbsvnurl   = "https://svn.macports.org/repository/macports/contrib/mp-buildbot"
 svnurl       = "https://svn.macports.org/repository/macports/trunk"
 archivesite  = "https://packages.macports.org"
 slaveprefix  = "/opt/local"
-toolsprefix  = "/opt/mports"
+toolsprefix  = "/opt/bblocal"
 
 if os.path.exists(_path('config.json')):
     with open(_path('config.json')) as f:
@@ -77,7 +77,8 @@
 # poller is used for local testing but PBChangeSource (which relies on
 # notifications from a post-commit script) should be used in production
 
-if production:
+#if production:
+if False:
     # TODO
     from buildbot.changes.pb import PBChangeSource
     sourcedata = []
@@ -88,7 +89,7 @@
     from buildbot.changes.svnpoller import SVNPoller
     c['change_source'] = (SVNPoller(
         svnurl='https://svn.macports.org/repository/macports/trunk',
-        #svnbin='/opt/local/bin/svn',
+        svnbin='@PREFIX@/bin/svn',
         pollinterval=300,
         category='macports',
         project='ports'))
@@ -241,8 +242,8 @@
 # because archives must be built with prefix=/opt/local
 if production:
     prefix='/opt/local'
-    dlhost='packages@packages-origin.macports.org'
-    dlpath='/var/www/html/packages'
+    dlhost=''
+    dlpath='@PREFIX@/var/rsync/macports/packages'
 else:
     prefix=slaveprefix
     dlhost=''
@@ -369,24 +370,18 @@
 portbuilder_factory = BuildFactory()
 portbuilder_factory.workdir = '../build'
 
-# XXX: use InfoStep instead of running a dummy command
-portbuilder_factory.addStep(ShellCommand(
-    command=["/usr/bin/true"],
-    description=[WithProperties("Port: %(portname)s")]))
-#portbuilder_factory.addStep(InfoStep(title=WithProperties("Port %(portname)s")))
-
 portbuilder_factory.addStep(Compile(
     command=['./mpbb/mpbb', 'install-dependencies', '--prefix', WithProperties(prefix), '--port', WithProperties('%(portname)s')],
     name="install-dependencies",
-    description=["installing", "dependencies"],
-    descriptionDone=["install", "dependencies"],
+    description=["installing", "dependencies", WithProperties("of %(portname)s")],
+    descriptionDone=["install", "dependencies", WithProperties("of %(portname)s")],
     haltOnFailure=True))
 
 portbuilder_factory.addStep(Compile(
     command=['./mpbb/mpbb', 'install-port', '--prefix', WithProperties(prefix), '--port', WithProperties('%(portname)s')],
     name="install-port",
-    description=["installing", "port"],
-    descriptionDone=["install", "port"],
+    description=["installing", WithProperties("%(portname)s")],
+    descriptionDone=["install", WithProperties("%(portname)s")],
     haltOnFailure=True))
 
 portbuilder_factory.addStep(ShellCommand(
@@ -488,7 +483,8 @@
     cancelPendingBuild = 'auth',
 )
 
-if production:
+#if production:
+if False:
     # send mail about base failures to users on the blamelist
     from buildbot.status.mail import MailNotifier
     mn = MailNotifier(
